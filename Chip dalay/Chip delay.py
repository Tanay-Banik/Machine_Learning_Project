# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z7mUo_FuUsEBWJIB2c4qkSyFtKg7vvnk
"""

import numpy as np
import pandas as pd

# Set random seed
np.random.seed(42)

# Generate synthetic data (1000 samples)
n_samples = 1000
data = pd.DataFrame({
    'transistor_size': np.random.uniform(10, 100, n_samples),         # nm
    'supply_voltage': np.random.uniform(0.8, 1.2, n_samples),         # V
    'fan_out': np.random.randint(1, 5, n_samples),                    # Unitless
    'wire_length': np.random.uniform(100, 500, n_samples),            # um
    'temperature': np.random.uniform(20, 100, n_samples),             # Celsius
})

# Define delay as a function (arbitrary example)
noise = np.random.normal(0, 0.2, n_samples)
data['delay'] = (
    1.5 * data['transistor_size'] / data['supply_voltage']
    + 0.3 * data['fan_out']
    + 0.01 * data['wire_length']
    + 0.02 * data['temperature']
    + noise
)

data.head()

import matplotlib.pyplot as plt
import seaborn as sns

sns.heatmap(data.corr(), annot=True, cmap='coolwarm')
plt.title("Feature Correlation Heatmap")
plt.show()

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

X = data.drop('delay', axis=1)
y = data['delay']

# Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict
y_pred = model.predict(X_test)

# Evaluate
print("MSE:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))

plt.scatter(y_test, y_pred, alpha=0.6)
plt.xlabel("Actual Delay")
plt.ylabel("Predicted Delay")
plt.title("Actual vs Predicted Delay")
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--')
plt.show()